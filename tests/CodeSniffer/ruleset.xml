<?xml version="1.0"?>
<ruleset name="CodeSniffer AppTemplate">
  <description>Template coding standard</description>
  
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
  <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>             <!-- Detects incrementer jumbling in for loops -->
  <rule ref="Generic.PHP.DisallowShortOpenTag"/>                    <!-- Shorthand PHP open tags are not used -->
  <rule ref="Generic.PHP.LowerCaseConstant"/>                       <!-- All uses of true, false and null are lowerrcase -->
  <rule ref="Generic.PHP.DeprecatedFunctions"/>
  
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>     <!-- Constants and class constants must be uppercase -->
  <rule ref="Generic.NamingConventions.ConstructorName"/>           <!-- Use PHP5 style __construct() -->
  
  <rule ref="Generic.Classes.DuplicateClassName"/>                  <!-- Same class or interface name is used in multiple files -->
    
  <rule ref="PEAR.Functions.ValidDefaultValue"/>                    <!-- Default value params come at the end of the function signature -->
  <rule ref="PEAR.NamingConventions.ValidClassName"/>
  
  <rule ref="Zend.Files.ClosingTag"/>
  
  <rule ref="Squiz.PHP.GlobalKeyword"/>         
  <rule ref="Squiz.PHP.InnerFunctions"/>
  <rule ref="Squiz.Scope.StaticThisUsage"/>
  
  <rule ref="Generic.Metrics.CyclomaticComplexity"/>
  <rule ref="Generic.Metrics.NestingLevel" />
 
</ruleset>